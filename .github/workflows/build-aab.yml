name: Build Android AAB (Auto-Detect + Patch)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Install Android SDK components
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Install Bubblewrap (for project generation)
        run: npm i -g @bubblewrap/cli

      - name: Prepare Bubblewrap config (non-interactive)
        run: |
          mkdir -p ~/.bubblewrap
          cat > ~/.bubblewrap/config.json << EOF
          {
            "jdkPath": "$JAVA_HOME",
            "androidSdkPath": "$ANDROID_SDK_ROOT"
          }
          EOF
          echo "JAVA_HOME=$JAVA_HOME"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"

      - name: Generate signing key (known creds)
        run: |
          keytool -genkeypair -v \
            -keystore android.keystore \
            -storepass changeit123 \
            -keypass changeit123 \
            -alias njpwa \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -dname "CN=NJ Pour Digital, OU=Apps, O=NJ Pour Digital, L=East Brunswick, ST=NJ, C=US"

      - name: Create twa-manifest.json
        run: |
          cat > twa-manifest.json << 'EOF'
          {
            "packageId": "com.njpourdigital.app.twa",
            "host": "app.njpourdigital.com",
            "name": "NJ Pour Digital",
            "launcherName": "NJP Digital",
            "display": "standalone",
            "themeColor": "#0a2540",
            "backgroundColor": "#0a2540",
            "startUrl": "/",
            "iconUrl": "https://app.njpourdigital.com/icon-512.png",
            "monochromeIconUrl": "https://app.njpourdigital.com/icon-512.png",
            "navigationColor": "#0a2540",
            "navigationColorDark": "#0a2540",
            "appVersionName": "1.0.1",
            "appVersionCode": 3,
            "signingKey": {
              "path": "android.keystore",
              "alias": "njpwa",
              "storePassword": "changeit123",
              "keyPassword": "changeit123"
            }
          }
          EOF

      # ==== FIX: init if android/ doesn't exist, otherwise update ====
      - name: Generate or Init Bubblewrap project (auto-yes)
        run: |
          if [ -d android ]; then
            echo "android/ exists → running bubblewrap update"
            yes | bubblewrap update
          else
            echo "android/ missing → running bubblewrap init"
            yes | bubblewrap init --manifest twa-manifest.json
          fi

      - name: Verify Android project exists
        run: |
          if [ ! -f android/app/build.gradle ]; then
            echo "ERROR: android/app/build.gradle not found. Bubblewrap project did not generate."
            ls -la
            exit 1
          fi

      - name: Show generated files (debug)
        run: |
          pwd
          ls -la
          echo "--- head of android/app/build.gradle ---"
          sed -n '1,140p' android/app/build.gradle

      # Patch malformed notification flags that break Groovy parser
      - name: Patch Gradle (normalize notification flags)
        run: |
          echo "Before patch:"
          grep -n 'enableNot' android/app/build.gradle || true
          sed -i -E 's/enableNotifications[[:space:]]*[:=][[:space:]]*;?/enableNotifications false/g' android/app/build.gradle
          sed -i -E 's/enableNotificationDelegation[[:space:]]*[:=][[:space:]]*;?/enableNotificationDelegation false/g' android/app/build.gradle
          sed -i -E 's/enableNotifications[[:space:]]*$/enableNotifications false/g' android/app/build.gradle
          sed -i -E 's/enableNotificationDelegation[[:space:]]*$/enableNotificationDelegation false/g' android/app/build.gradle
          echo "After patch:"
          grep -n 'enableNot' android/app/build.gradle || true

      - name: Build AAB with Gradle (no daemon, more memory)
        timeout-minutes: 30
        working-directory: android
        env:
          JAVA_OPTS: -Xmx2g
          GRADLE_OPTS: -Dorg.gradle.jvmargs=-Xmx2g -Dorg.gradle.daemon=false -Dorg.gradle.console=plain
        run: |
          chmod +x ./gradlew || true
          ./gradlew bundleRelease --stacktrace --warning-mode=all --no-daemon

      - name: Show SHA-256 for assetlinks.json
        run: keytool -list -v -keystore android.keystore -alias njpwa -storepass changeit123 | grep SHA256 || true

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/bundle/release/app-release.aab
